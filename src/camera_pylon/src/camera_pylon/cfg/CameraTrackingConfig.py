## *********************************************************
## 
## File autogenerated for the camera_pylon package 
## by the dynamic_reconfigure package.
## Please do not edit.
## 
## ********************************************************/

##**********************************************************
## Software License Agreement (BSD License)
##
##  Copyright (c) 2008, Willow Garage, Inc.
##  All rights reserved.
##
##  Redistribution and use in source and binary forms, with or without
##  modification, are permitted provided that the following conditions
##  are met:
##
##   * Redistributions of source code must retain the above copyright
##     notice, this list of conditions and the following disclaimer.
##   * Redistributions in binary form must reproduce the above
##     copyright notice, this list of conditions and the following
##     disclaimer in the documentation and/or other materials provided
##     with the distribution.
##   * Neither the name of the Willow Garage nor the names of its
##     contributors may be used to endorse or promote products derived
##     from this software without specific prior written permission.
##
##  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
##  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
##  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
##  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
##  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
##  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
##  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
##  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
##  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
##  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
##  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
##  POSSIBILITY OF SUCH DAMAGE.
##**********************************************************/

from dynamic_reconfigure.encoding import extract_params

inf = float('inf')

config_description = {'upper': 'DEFAULT', 'lower': 'groups', 'srcline': 233, 'name': 'Default', 'parent': 0, 'srcfile': '/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py', 'cstate': 'true', 'parentname': 'Default', 'class': 'DEFAULT', 'field': 'default', 'state': True, 'parentclass': '', 'groups': [], 'parameters': [{'srcline': 259, 'description': 'Width)', 'max': 10000, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py', 'name': 'Width', 'edit_method': '', 'default': 1600, 'level': 0, 'min': 0, 'type': 'int'}, {'srcline': 259, 'description': 'Height', 'max': 10000, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py', 'name': 'Height', 'edit_method': '', 'default': 1200, 'level': 0, 'min': 0, 'type': 'int'}, {'srcline': 259, 'description': 'OffsetX', 'max': 10000, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py', 'name': 'OffsetX', 'edit_method': '', 'default': 0, 'level': 0, 'min': 0, 'type': 'int'}, {'srcline': 259, 'description': 'OffsetY', 'max': 10000, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py', 'name': 'OffsetY', 'edit_method': '', 'default': 0, 'level': 0, 'min': 0, 'type': 'int'}, {'srcline': 259, 'description': 'Automatic exposure', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py', 'name': 'ExposureAuto', 'edit_method': "{'enum_description': 'Automatic Settings', 'enum': [{'srcline': 20, 'description': 'Use Manual Settings', 'srcfile': '/home/eos/Repos/CameraTracking/src/camera_pylon/cfg/CameraConfig.cfg', 'cconsttype': 'const char * const', 'value': 'Off', 'ctype': 'std::string', 'type': 'str', 'name': 'Off_'}, {'srcline': 21, 'description': 'Recalc Once', 'srcfile': '/home/eos/Repos/CameraTracking/src/camera_pylon/cfg/CameraConfig.cfg', 'cconsttype': 'const char * const', 'value': 'Once', 'ctype': 'std::string', 'type': 'str', 'name': 'Once'}, {'srcline': 22, 'description': 'Recalc Continually', 'srcfile': '/home/eos/Repos/CameraTracking/src/camera_pylon/cfg/CameraConfig.cfg', 'cconsttype': 'const char * const', 'value': 'Continuous', 'ctype': 'std::string', 'type': 'str', 'name': 'Continuous'}]}", 'default': 'Off', 'level': 0, 'min': '', 'type': 'str'}, {'srcline': 259, 'description': 'Exposure time (us)', 'max': 840000, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py', 'name': 'ExposureTimeAbs', 'edit_method': '', 'default': 14000, 'level': 0, 'min': 35, 'type': 'int'}, {'srcline': 259, 'description': 'Automatic gain', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py', 'name': 'GainAuto', 'edit_method': "{'enum_description': 'Automatic Settings', 'enum': [{'srcline': 20, 'description': 'Use Manual Settings', 'srcfile': '/home/eos/Repos/CameraTracking/src/camera_pylon/cfg/CameraConfig.cfg', 'cconsttype': 'const char * const', 'value': 'Off', 'ctype': 'std::string', 'type': 'str', 'name': 'Off_'}, {'srcline': 21, 'description': 'Recalc Once', 'srcfile': '/home/eos/Repos/CameraTracking/src/camera_pylon/cfg/CameraConfig.cfg', 'cconsttype': 'const char * const', 'value': 'Once', 'ctype': 'std::string', 'type': 'str', 'name': 'Once'}, {'srcline': 22, 'description': 'Recalc Continually', 'srcfile': '/home/eos/Repos/CameraTracking/src/camera_pylon/cfg/CameraConfig.cfg', 'cconsttype': 'const char * const', 'value': 'Continuous', 'ctype': 'std::string', 'type': 'str', 'name': 'Continuous'}]}", 'default': 'Off', 'level': 0, 'min': '', 'type': 'str'}, {'srcline': 259, 'description': 'Gain (%)', 'max': 3, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py', 'name': 'Gain', 'edit_method': '', 'default': 1, 'level': 0, 'min': 1, 'type': 'int'}, {'srcline': 259, 'description': 'Pixel Format', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py', 'name': 'PixelFormat', 'edit_method': "{'enum_description': 'Pixel Format', 'enum': [{'srcline': 25, 'description': 'Color', 'srcfile': '/home/eos/Repos/CameraTracking/src/camera_pylon/cfg/CameraConfig.cfg', 'cconsttype': 'const char * const', 'value': 'Bayer_RG8', 'ctype': 'std::string', 'type': 'str', 'name': 'Bayer_RG8'}, {'srcline': 26, 'description': 'Grayscale', 'srcfile': '/home/eos/Repos/CameraTracking/src/camera_pylon/cfg/CameraConfig.cfg', 'cconsttype': 'const char * const', 'value': 'Mono_8', 'ctype': 'std::string', 'type': 'str', 'name': 'Mono_8'}, {'srcline': 27, 'description': 'Color', 'srcfile': '/home/eos/Repos/CameraTracking/src/camera_pylon/cfg/CameraConfig.cfg', 'cconsttype': 'const char * const', 'value': 'YUV_422', 'ctype': 'std::string', 'type': 'str', 'name': 'YUV_422'}]}", 'default': 'Bayer_RG8', 'level': 0, 'min': '', 'type': 'str'}, {'srcline': 259, 'description': 'Acquisition Mode', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py', 'name': 'AcquisitionMode', 'edit_method': "{'enum_description': 'AcquisitionMode', 'enum': [{'srcline': 30, 'description': 'Capture continuously upon trigger.', 'srcfile': '/home/eos/Repos/CameraTracking/src/camera_pylon/cfg/CameraConfig.cfg', 'cconsttype': 'const char * const', 'value': 'Continuous', 'ctype': 'std::string', 'type': 'str', 'name': 'Continuous_'}, {'srcline': 31, 'description': 'Capture one frame upon trigger.', 'srcfile': '/home/eos/Repos/CameraTracking/src/camera_pylon/cfg/CameraConfig.cfg', 'cconsttype': 'const char * const', 'value': 'SingleFrame', 'ctype': 'std::string', 'type': 'str', 'name': 'SingleFrame'}, {'srcline': 32, 'description': 'Capture multiple frames upon trigger.', 'srcfile': '/home/eos/Repos/CameraTracking/src/camera_pylon/cfg/CameraConfig.cfg', 'cconsttype': 'const char * const', 'value': 'MultiFrame', 'ctype': 'std::string', 'type': 'str', 'name': 'MultiFrame'}]}", 'default': 'Continuous', 'level': 0, 'min': '', 'type': 'str'}, {'srcline': 259, 'description': 'fixed Framerate enable', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py', 'name': 'FixedFrameRate', 'edit_method': '', 'default': False, 'level': 0, 'min': False, 'type': 'bool'}, {'srcline': 259, 'description': 'Framerate (fps)', 'max': 1000.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py', 'name': 'FrameRate', 'edit_method': '', 'default': 10.0, 'level': 0, 'min': 1.19048, 'type': 'double'}, {'srcline': 259, 'description': 'Shutter Mode', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py', 'name': 'ShutterMode', 'edit_method': "{'enum_description': 'Shutter Mode', 'enum': [{'srcline': 15, 'description': 'Rolling Shutter Mode', 'srcfile': '/home/eos/Repos/CameraTracking/src/camera_pylon/cfg/CameraConfig.cfg', 'cconsttype': 'const char * const', 'value': 'Rolling', 'ctype': 'std::string', 'type': 'str', 'name': 'Rolling'}, {'srcline': 16, 'description': 'Global Shutter Mode', 'srcfile': '/home/eos/Repos/CameraTracking/src/camera_pylon/cfg/CameraConfig.cfg', 'cconsttype': 'const char * const', 'value': 'Global', 'ctype': 'std::string', 'type': 'str', 'name': 'Global'}]}", 'default': 'Rolling', 'level': 0, 'min': '', 'type': 'str'}], 'type': '', 'id': 0}

min = {}
max = {}
defaults = {}
level = {}
type = {}
all_level = 0

#def extract_params(config):
#    params = []
#    params.extend(config['parameters'])    
#    for group in config['groups']:
#        params.extend(extract_params(group))
#    return params

for param in extract_params(config_description):
    min[param['name']] = param['min']
    max[param['name']] = param['max']
    defaults[param['name']] = param['default']
    level[param['name']] = param['level']
    type[param['name']] = param['type']
    all_level = all_level | param['level']

CameraTracking_Off = 'Off'
CameraTracking_On = 'On'
CameraTracking_Rolling = 'Rolling'
CameraTracking_Global = 'Global'
CameraTracking_Off_ = 'Off'
CameraTracking_Once = 'Once'
CameraTracking_Continuous = 'Continuous'
CameraTracking_Bayer_RG8 = 'Bayer_RG8'
CameraTracking_Mono_8 = 'Mono_8'
CameraTracking_YUV_422 = 'YUV_422'
CameraTracking_Continuous_ = 'Continuous'
CameraTracking_SingleFrame = 'SingleFrame'
CameraTracking_MultiFrame = 'MultiFrame'
